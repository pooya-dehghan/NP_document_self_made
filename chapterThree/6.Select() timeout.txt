the last arg f0r select() allows us to specify a timeout.
it expects a pointer to struct timeval.the timeval structure is declared as follows.

struct timeval{
  long tv_sec;
  long tv_usec;
}

tv_sec holds the number of seconds, and tv_usec holds the number of microseconds (1,000,000th second). If we want select() to wait a maximum of 1.5 seconds, we can call it like this:struct timeval timeout;
timeout.tv_sec = 1;
timeout.tv_usec = 500000;
select(max_socket+1, &copy, 0, 0, &timeout);

In this case, select() returns after a socket in fd_set copy is ready to read or after 1.5 seconds has elapsed, whichever is sooner.

select() can also be used to monitor for writeable sockets (sockets where we could call send() without blocking), and sockets with exceptions. We can check for all three conditions with one call:

select(max_sockets+1, &ready_to_read, &ready_to_write, &excepted, &timeout);

On success, select() itself returns the number of socket descriptors contained in the (up to) three descriptor sets it monitored. The return value is zero if it timed out before any sockets were readable/writeable/excepted. select() returns -1 to indicate an error.
